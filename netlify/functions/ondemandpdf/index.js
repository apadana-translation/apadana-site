const { EleventyServerless } = require("@11ty/eleventy");
const { builder } = require("@netlify/functions");
const PDFDocument = require("pdfkit");
const getStream = require("get-stream");

// Explicit dependencies for the bundler from config file and global data.
// The file is generated by the Eleventy Serverless Bundler Plugin.
require("./eleventy-bundler-modules.js");

async function toPDF() {
  const doc = new PDFDocument();
  doc.text("Hello, World!");
  doc.end();
  return await getStream.buffer(doc);
}

async function handler(event) {
  let elev = new EleventyServerless("ondemandpdf", {
    path: new URL(event.rawUrl).pathname,
    query: event.queryStringParameters,
    functionsDir: "./netlify/functions/",
  });

  try {
    let [page] = await elev.getOutput();

    const pdfBuffer = await toPDF();

    return {
      statusCode: 200,
      body: JSON.stringify(elev),
    };

    return {
      statusCode: 200,
      headers: {
        "Content-Type": "application/pdf",
      },
      body: pdfBuffer.toString("base64"),
      isBase64Encoded: true,
    };
  } catch (error) {
    // Only console log for matching serverless paths
    // (otherwise youâ€™ll see a bunch of BrowserSync 404s for non-dynamic URLs during --serve)
    if (elev.isServerlessUrl(event.path)) {
      console.log("Serverless Error:", error);
    }

    return {
      statusCode: error.httpStatusCode || 500,
      body: JSON.stringify(
        {
          error: error.message,
        },
        null,
        2
      ),
    };
  }
}

exports.handler = builder(handler);
